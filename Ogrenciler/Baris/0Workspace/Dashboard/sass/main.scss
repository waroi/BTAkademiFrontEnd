* {
  margin: 0;
  box-sizing: border-box;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
}
$m: (
  auto: 0 auto,
  0: 0,
  1: 1em,
  2: 2em,
  3: 3em,
);
$p: (
  0: 0,
  1: 1em,
  2: 2em,
  3: 3em,
);
$shadow: (
  small: 0 0 6px 0 rgb(199, 199, 199),
  medium: 0 0 12px 0 rgb(199, 199, 199),
  large: 0 0 18px 0 rgb(199, 199, 199),
);
$text-size: (
  large: large,
  normal: normal,
  small: small,
);
$text-weight: (
  bold: bold,
  normal: normal,
  lighter: lighter,
);
$color: (
  primary: rgb(21, 61, 119),
  secondary: rgb(244, 247, 252),
  light:rgb(255,255,255),
  danger: rgb(220, 53, 69),
  success: rgb(40, 167, 69),
  warning: rgb(253, 126, 20),
  link: rgba(255, 255, 255, 0),
  black: rgba(0,0,0,.5)
);
$border: (
  rounded: 16px,
  circle: 50%,
);

$col:(
  2:2/12*100%,
  3:3/12*100%,
  4:4/12*100%,
  6:6/12*100,
  8:8/12*100,
  10:10/12*100,
  12:12/12*100,
);
@each $key, $value in $m {
  .m-#{$key} {
    margin: $value;
  }
}
@each $key, $value in $p {
  .p-#{$key} {
    padding: $value;
  }
}
@each $key, $value in $shadow {
  .shadow-#{$key} {
    box-shadow: $value;
  }
}
@each $key, $value in $text-size {
  .text-#{$key} {
    font-size: $value;
  }
}
@each $key, $value in $text-weight {
  .text-#{$key} {
    font-weight: $value;
  }
}
@each $key, $value in $color {
  .text-#{$key} {
    color: $value;
  }

  .bg-#{$key} {
    background-color: $value;
  }

  .btn-#{$key} {
    display: flex;
    gap: 20px;
    padding: 0.5em;
    text-decoration: none;
    align-items: center;
    background-color: $value;
    color: rgb(255, 255, 255);
    border-radius: 8px;
    &:hover {
      opacity: 0.8;
      background-color: #cccc;
    }
    @if $key==link or $key==warning {
      color: rgb(0, 0, 0);
    }
    i {
      color: rgb(56, 104, 173);
    }
  }
  .badge-#{$key} {
    background-color: $value;
    color: rgb(255, 255, 255);
    border-radius: 16px;
  }
}
@each $key, $value in $border {
  .border-#{$key} {
    border-radius: $value;
  }
}
@each $key,$value in $col {
  .col-#{$key}{
    width: $value;
    display: flex;
    flex-direction: column;
  }
}

@mixin flexRC($direction) {
  display: flex;
  flex-direction: $direction;
}

@mixin gridRC($rowCount, $colCount) {
  display: grid;
  grid-template-columns: repeat($colCount, minmax(200px, 1fr));
  grid-template-rows: repeat($rowCount, 1fr);
}

.row{
  @include flexRC(row);
  gap: 10px;
  align-items: center;
}
.col{
  @include flexRC(column);
  gap: 10px;
}

.wrapper {
  @include flexRC(row);
}
.container,
.container-fluid {
  @include flexRC(column)
  padding: 1em;
  width: 100%;
  
}
.sidebar {
  margin: 0 auto;
  max-width: 250px;
  min-width: 250px;
  height: 100vh;

  .sidebar-logo-header {
    margin: 0;
    padding: 1em 1em;
  }
  .sidebar-user {
    @include flexRC(column);
    justify-content: center;
    align-items: center;
    padding: 2em;
    img {
      width: 75px;
      height: 75px;
    }
  }
  .sidebar-nav {
    list-style: none;
    margin: 0;
    padding: 0;
    .sidebar-header {
      padding: 0.5em 1.5em;
      font-size: smaller;
      color: #adb5bd;
    }
    .sidebar-item {
      padding: 0.3em 1.5em;
      width: 100%;
    }
  }
}
.card{
  
}
.dropdown {
  position: relative;
  
  &:hover {
    .dropdown-content {
      display: block;
    }
  }
  .dropdown-content {
    right: 0;
    position: absolute;
    display: none;
    min-width: 500px;
    background-color: #fff;
    list-style: none;
    width: 100%;
    border-radius: 8px;
    li{
      border: 0.2px solid rgb(240, 240, 240);
      padding: map-get($p, 1 );
    }
  }
}

.navbar{
  padding: 1em;
  img{
    width: 50px;
    height: 50px;
  }
} 
.justify-content-between{
  display: flex;
  justify-content: space-between;
}
.justify-content-end{
  display: flex;
  justify-content: flex-end;
}
.text-align-center{
  text-align: center;
}
.list-style-none{
  list-style: none;
  margin: 0;
  padding: 0;
}
#SearchBox{
  outline: 0;
  border: 0;
  background-color: map-get($color, secondary );
  font-size: large;
  
}